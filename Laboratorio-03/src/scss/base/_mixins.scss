@use '../base/variables' as v;

/* Paara las diferentes pantallas se utilizan estos
 */
 @mixin phone {
    @media (min-width: v.$phone) {
        @content;
    }
}

@mixin tablet {
    @media (min-width: v.$tablet) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: v.$desktop) {
        @content;
    }
}

@mixin maxTablet {
    @media (max-width: v.$tablet) {
        @content;
    }
}

@mixin maxDesktop {
    @media (max-width: v.$maxDesktop) {
        @content;
    }
}
/* Mixin relacionado al grid */
@mixin grid($columns, $spacing) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $spacing;
}

/* Mixin relacionado con el flex, 
ayuda a manda a llamar el flex y luego 
configurarlo  */
@mixin flexbox($justify: center, $align: center, $direction: row) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
}
/* Este mixin acepta dos argumentos: 
width (ancho) y height (altura). Además 
de redondear los bordes con “border-radius”, 
"object-fit: cover" ajusta la imagen con
 el contenedor y "border-style: none" 
 elimina cualquier borde alrededor del 
 elemento. */
 @mixin card-img($width, $height) {
    width: $width;
    height: $height;
    border-radius: 15px;
    object-fit: cover;
    border-style: none;
}

/* Este mixing agrega transicion suave para
todas las propiedades css y aplica un 3d
 */
 @mixin card-transition($duration, $timing-function) {
    transition: all $duration $timing-function;
    transform-style: preserve-3d;
}

/* Para dimensiones personalizadas */
@mixin dimensions($width: auto, $height: auto) {
    width: $width;
    height: $height;
}
